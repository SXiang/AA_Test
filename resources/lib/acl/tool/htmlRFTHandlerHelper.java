// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.lib.acl.tool;
import lib.acl.helper.sup.ObjectHelper;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>htmlRFTHandler</b><br>
 * Generated     : <b>2011/10/14 11:47:28 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 build 2600 Service Pack 3 <br>
 * 
 * @since  October 14, 2011
 * @author Steven_Xiang
 */
public abstract class htmlRFTHandlerHelper extends lib.acl.helper.sup.ObjectHelper
{
	/**
	 * _0OfRetrieveFromQawin2k8AclqaLocalCompleted: with default state.
	 *		.class : #32770
	 * 		.processName : iexplore.exe
	 */
	protected TopLevelSubitemTestObject IEDialog() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("IEDialog"));
	}
	/**
	 * _0OfRetrieveFromQawin2k8AclqaLocalCompleted: with specific test context and state.
	 *		.class : #32770
	 * 		.processName : iexplore.exe
	 */
	protected TopLevelSubitemTestObject IEDialog(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("IEDialog"), anchor, flags);
	}
	
	/**
	 * SaveAs: with default state.
	 *		.text : Save As
	 * 		.class : #32770
	 * 		.processName : iexplore.exe
	 * 		.name : Save As
	 */
	protected TopLevelSubitemTestObject ReplaceWindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ReplaceWindow"));
	}
	/**
	 * SaveAs: with specific test context and state.
	 *		.text : Save As
	 * 		.class : #32770
	 * 		.processName : iexplore.exe
	 * 		.name : Save As
	 */
	protected TopLevelSubitemTestObject ReplaceWindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ReplaceWindow"), anchor, flags);
	}
	
	/**
	 * ACLTableDownload: with default state.
	 *		Name : ProgressForm
	 * 		Text : ACL table download
	 * 		.class : EWPUtilities.UI.ProgressForm
	 * 		.processName : EXCEL.EXE
	 */
	protected TopLevelSubitemTestObject aclTableDownloadwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("aclTableDownloadwindow"));
	}
	/**
	 * ACLTableDownload: with specific test context and state.
	 *		Name : ProgressForm
	 * 		Text : ACL table download
	 * 		.class : EWPUtilities.UI.ProgressForm
	 * 		.processName : EXCEL.EXE
	 */
	protected TopLevelSubitemTestObject aclTableDownloadwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("aclTableDownloadwindow"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * Loginsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Login
	 * 		.class : Html.INPUT.submit
	 * 		.name : submit
	 */
	protected GuiTestObject button_loginsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_loginsubmit"));
	}
	/**
	 * Loginsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Login
	 * 		.class : Html.INPUT.submit
	 * 		.name : submit
	 */
	protected GuiTestObject button_loginsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_loginsubmit"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbuttonSaveAs() 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbuttonSaveAs"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject cancelbuttonSaveAs(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("cancelbuttonSaveAs"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxSaveAsFile() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxSaveAsFile"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxSaveAsFile(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxSaveAsFile"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : en_CA
	 * 		.class : ComboBox
	 * 		.name : en_CA
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxSaveIn() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxSaveIn"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : en_CA
	 * 		.class : ComboBox
	 * 		.name : en_CA
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject comboBoxSaveIn(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("comboBoxSaveIn"), anchor, flags);
	}
	
	/**
	 * _32768: with default state.
	 *		.class : #32768
	 * 		.processName : AuditExchange.exe
	 */
	protected TopLevelSubitemTestObject copyPastewindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("copyPastewindow"));
	}
	/**
	 * _32768: with specific test context and state.
	 *		.class : #32768
	 * 		.processName : AuditExchange.exe
	 */
	protected TopLevelSubitemTestObject copyPastewindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("copyPastewindow"), anchor, flags);
	}
	
	/**
	 * Copy: with default state.
	 *		.text : Copy
	 * 		.class : .Menuitem
	 * 		.name : Copy
	 */
	protected GuiSubitemTestObject copymenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("copymenuItem"));
	}
	/**
	 * Copy: with specific test context and state.
	 *		.text : Copy
	 * 		.class : .Menuitem
	 * 		.name : Copy
	 */
	protected GuiSubitemTestObject copymenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("copymenuItem"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonCancel: with default state.
	 *		.text : Cancel
	 * 		.class : Html.DialogButton
	 */
	protected GuiTestObject dialog_htmlButtonCancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlButtonCancel"));
	}
	/**
	 * HtmlDialogButtonCancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : Html.DialogButton
	 */
	protected GuiTestObject dialog_htmlButtonCancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlButtonCancel"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonOpen: with default state.
	 *		.text : &Open
	 * 		.class : Html.DialogButton
	 */
	protected GuiTestObject dialog_htmlButtonOpen() 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlButtonOpen"));
	}
	/**
	 * HtmlDialogButtonOpen: with specific test context and state.
	 *		.text : &Open
	 * 		.class : Html.DialogButton
	 */
	protected GuiTestObject dialog_htmlButtonOpen(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlButtonOpen"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonSave: with default state.
	 *		.text : &Save
	 * 		.class : Html.DialogButton
	 */
	protected GuiTestObject dialog_htmlButtonSave() 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlButtonSave"));
	}
	/**
	 * HtmlDialogButtonSave: with specific test context and state.
	 *		.text : &Save
	 * 		.class : Html.DialogButton
	 */
	protected GuiTestObject dialog_htmlButtonSave(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlButtonSave"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonClose: with default state.
	 *		.text : Close
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 3
	 */
	protected GuiTestObject dialog_htmlDialogButtonClose() 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlDialogButtonClose"));
	}
	/**
	 * HtmlDialogButtonClose: with specific test context and state.
	 *		.text : Close
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 3
	 */
	protected GuiTestObject dialog_htmlDialogButtonClose(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlDialogButtonClose"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonOK: with default state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 2
	 */
	protected GuiTestObject dialog_htmlDialogButtonOK() 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlDialogButtonOK"));
	}
	/**
	 * HtmlDialogButtonOK: with specific test context and state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 2
	 */
	protected GuiTestObject dialog_htmlDialogButtonOK(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlDialogButtonOK"), anchor, flags);
	}
	
	/**
	 * HtmlDialogStaticDoYouWantToOpenOrSaveThisFile: with default state.
	 *		.text : Do you want to open or save this file?
	 * 		.class : Html.DialogStatic
	 */
	protected GuiTestObject dialog_htmlFileDownload() 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlFileDownload"));
	}
	/**
	 * HtmlDialogStaticDoYouWantToOpenOrSaveThisFile: with specific test context and state.
	 *		.text : Do you want to open or save this file?
	 * 		.class : Html.DialogStatic
	 */
	protected GuiTestObject dialog_htmlFileDownload(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("dialog_htmlFileDownload"), anchor, flags);
	}
	
	/**
	 * AXGatewayMyWorkEngagement: with default state.
	 *		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_html() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_html"));
	}
	/**
	 * AXGatewayMyWorkEngagement: with specific test context and state.
	 *		.class : Html.HtmlDocument
	 */
	protected DocumentTestObject document_html(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_html"), anchor, flags);
	}
	
	/**
	 * ThisTableExceedsTheMaximumAllowableRowsOrColumnsSupportedByThisVersionOfExcelClickOKToLoadTheAllowab: with default state.
	 *		.class : Static
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject errmsg() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("errmsg"));
	}
	/**
	 * ThisTableExceedsTheMaximumAllowableRowsOrColumnsSupportedByThisVersionOfExcelClickOKToLoadTheAllowab: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject errmsg(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("errmsg"), anchor, flags);
	}
	
	/**
	 * Error: with default state.
	 *		.text : Error
	 * 		.class : #32770
	 * 		.processName : EXCEL.EXE
	 * 		.name : Error
	 */
	protected TopLevelSubitemTestObject errorwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("errorwindow"));
	}
	/**
	 * Error: with specific test context and state.
	 *		.text : Error
	 * 		.class : #32770
	 * 		.processName : EXCEL.EXE
	 * 		.name : Error
	 */
	protected TopLevelSubitemTestObject errorwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("errorwindow"), anchor, flags);
	}
	
	/**
	 * HtmlNoOpTopWindow: with default state.
	 *		.class : Html.NoOpTopWindow
	 */
	protected GuiTestObject htmlPopupMenu() 
	{
		return new GuiTestObject(
                        getMappedTestObject("htmlPopupMenu"));
	}
	/**
	 * HtmlNoOpTopWindow: with specific test context and state.
	 *		.class : Html.NoOpTopWindow
	 */
	protected GuiTestObject htmlPopupMenu(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("htmlPopupMenu"), anchor, flags);
	}
	
	/**
	 * HtmlDialog: with default state.
	 *		.class : Html.Dialog
	 */
	protected TopLevelTestObject html_htmlDialo() 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("html_htmlDialo"));
	}
	/**
	 * HtmlDialog: with specific test context and state.
	 *		.class : Html.Dialog
	 */
	protected TopLevelTestObject html_htmlDialo(TestObject anchor, long flags) 
	{
		return new TopLevelTestObject(
                        getMappedTestObject("html_htmlDialo"), anchor, flags);
	}
	
	/**
	 * progressBar: with default state.
	 *		.id : progressBar
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_progressBar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_progressBar"));
	}
	/**
	 * progressBar: with specific test context and state.
	 *		.id : progressBar
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject html_progressBar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_progressBar"), anchor, flags);
	}
	
	/**
	 * status: with default state.
	 *		.id : status
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_status() 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_status"));
	}
	/**
	 * status: with specific test context and state.
	 *		.id : status
	 * 		.class : Html.DIV
	 */
	protected GuiTestObject html_status(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("html_status"), anchor, flags);
	}
	
	/**
	 * progressGif: with default state.
	 *		.alt : 
	 * 		.id : progressGif
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_progressGif() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_progressGif"));
	}
	/**
	 * progressGif: with specific test context and state.
	 *		.alt : 
	 * 		.id : progressGif
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_progressGif(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_progressGif"), anchor, flags);
	}
	
	/**
	 * overridelink: with default state.
	 *		.text : Continue to this website (not recommended).
	 * 		.id : overridelink
	 * 		.class : Html.A
	 * 		.name : overridelink
	 */
	protected GuiTestObject link_overridelink() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_overridelink"));
	}
	/**
	 * overridelink: with specific test context and state.
	 *		.text : Continue to this website (not recommended).
	 * 		.id : overridelink
	 * 		.class : Html.A
	 * 		.name : overridelink
	 */
	protected GuiTestObject link_overridelink(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_overridelink"), anchor, flags);
	}
	
	/**
	 * No: with default state.
	 *		.text : No
	 * 		.class : .Pushbutton
	 * 		.name : No
	 * 		.classIndex : 0
	 */
	protected GuiTestObject nobuttonReplace() 
	{
		return new GuiTestObject(
                        getMappedTestObject("nobuttonReplace"));
	}
	/**
	 * No: with specific test context and state.
	 *		.text : No
	 * 		.class : .Pushbutton
	 * 		.name : No
	 * 		.classIndex : 0
	 */
	protected GuiTestObject nobuttonReplace(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("nobuttonReplace"), anchor, flags);
	}
	
	/**
	 * HtmlDialogButtonOK: with default state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 1
	 */
	protected GuiTestObject okToIronport() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okToIronport"));
	}
	/**
	 * HtmlDialogButtonOK: with specific test context and state.
	 *		.text : OK
	 * 		.class : Html.DialogButton
	 * 		.classIndex : 1
	 */
	protected GuiTestObject okToIronport(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okToIronport"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"), anchor, flags);
	}
	
	/**
	 * Paste: with default state.
	 *		.text : Paste
	 * 		.class : .Menuitem
	 * 		.name : Paste
	 */
	protected GuiSubitemTestObject pastemenuItem() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("pastemenuItem"));
	}
	/**
	 * Paste: with specific test context and state.
	 *		.text : Paste
	 * 		.class : .Menuitem
	 * 		.name : Paste
	 */
	protected GuiSubitemTestObject pastemenuItem(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("pastemenuItem"), anchor, flags);
	}
	
	/**
	 * SaveAs: with default state.
	 *		.text : Save As
	 * 		.class : #32770
	 * 		.processName : iexplore.exe
	 * 		.name : Save As
	 */
	protected TopLevelSubitemTestObject saveAswindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("saveAswindow"));
	}
	/**
	 * SaveAs: with specific test context and state.
	 *		.text : Save As
	 * 		.class : #32770
	 * 		.processName : iexplore.exe
	 * 		.name : Save As
	 */
	protected TopLevelSubitemTestObject saveAswindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("saveAswindow"), anchor, flags);
	}
	
	/**
	 * Save: with default state.
	 *		.text : Save
	 * 		.class : .Pushbutton
	 * 		.name : Save
	 * 		.classIndex : 0
	 */
	protected GuiTestObject savebuttonSaveAs() 
	{
		return new GuiTestObject(
                        getMappedTestObject("savebuttonSaveAs"));
	}
	/**
	 * Save: with specific test context and state.
	 *		.text : Save
	 * 		.class : .Pushbutton
	 * 		.name : Save
	 * 		.classIndex : 0
	 */
	protected GuiTestObject savebuttonSaveAs(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("savebuttonSaveAs"), anchor, flags);
	}
	
	/**
	 * password: with default state.
	 *		.id : password
	 * 		.type : text
	 * 		.class : Html.INPUT.text
	 * 		.name : password
	 */
	protected TextGuiTestObject text_passwordSSO() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_passwordSSO"));
	}
	/**
	 * password: with specific test context and state.
	 *		.id : password
	 * 		.type : text
	 * 		.class : Html.INPUT.text
	 * 		.name : password
	 */
	protected TextGuiTestObject text_passwordSSO(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_passwordSSO"), anchor, flags);
	}
	
	/**
	 * HtmlDialogEdit: with default state.
	 *		.class : Html.DialogEdit
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_passwordWIN() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_passwordWIN"));
	}
	/**
	 * HtmlDialogEdit: with specific test context and state.
	 *		.class : Html.DialogEdit
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text_passwordWIN(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_passwordWIN"), anchor, flags);
	}
	
	/**
	 * username: with default state.
	 *		.id : username
	 * 		.class : Html.INPUT.text
	 * 		.name : username
	 */
	protected TextGuiTestObject text_usernameSSO() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_usernameSSO"));
	}
	/**
	 * username: with specific test context and state.
	 *		.id : username
	 * 		.class : Html.INPUT.text
	 * 		.name : username
	 */
	protected TextGuiTestObject text_usernameSSO(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_usernameSSO"), anchor, flags);
	}
	
	/**
	 * HtmlDialogEdit: with default state.
	 *		.class : Html.DialogEdit
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_usernameWIN() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_usernameWIN"));
	}
	/**
	 * HtmlDialogEdit: with specific test context and state.
	 *		.class : Html.DialogEdit
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_usernameWIN(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_usernameWIN"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.text : Yes
	 * 		.class : .Pushbutton
	 * 		.name : Yes
	 * 		.classIndex : 0
	 */
	protected GuiTestObject yesbuttonReplace() 
	{
		return new GuiTestObject(
                        getMappedTestObject("yesbuttonReplace"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.text : Yes
	 * 		.class : .Pushbutton
	 * 		.name : Yes
	 * 		.classIndex : 0
	 */
	protected GuiTestObject yesbuttonReplace(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("yesbuttonReplace"), anchor, flags);
	}
	
	

	protected htmlRFTHandlerHelper()
	{
		setScriptName("lib.acl.tool.htmlRFTHandler");
	}
	
}

