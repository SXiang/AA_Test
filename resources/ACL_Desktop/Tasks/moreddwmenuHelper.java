// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.ACL_Desktop.Tasks;
import ACL_Desktop.AppObject_Karen.DesktopSuperHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>moreddwmenu</b><br>
 * Generated     : <b>2012/03/09 8:01:49 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 build 2600 Service Pack 3 <br>
 * 
 * @since  March 09, 2012
 * @author Karen_zou
 */
public abstract class moreddwmenuHelper extends ACL_Desktop.AppObject_Karen.DesktopSuperHelper
{
	/**
	 * DataDefinitionWizardSelectPlatformForDataSource: with default state.
	 *		.text : RegularExpression(Data Definition Wizard)
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(Data Definition Wizard)
	 */
	protected TopLevelSubitemTestObject DDW() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("DDW"));
	}
	/**
	 * DataDefinitionWizardSelectPlatformForDataSource: with specific test context and state.
	 *		.text : RegularExpression(Data Definition Wizard)
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(Data Definition Wizard)
	 */
	protected TopLevelSubitemTestObject DDW(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("DDW"), anchor, flags);
	}
	
	/**
	 * Context: with default state.
	 *		.text : Context
	 * 		.class : .Menupopup
	 * 		.name : Context
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject contextpopupMenu() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("contextpopupMenu"));
	}
	/**
	 * Context: with specific test context and state.
	 *		.text : Context
	 * 		.class : .Menupopup
	 * 		.name : Context
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject contextpopupMenu(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("contextpopupMenu"), anchor, flags);
	}
	
	/**
	 * PCsAndAllOtherTypesOfComputersASCII: with default state.
	 *		.text : PCs and all other types of computers (ASCII)
	 * 		.class : .Radiobutton
	 * 		.name : PCs and all other types of computers (ASCII)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject cs_ascii() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("cs_ascii"));
	}
	/**
	 * PCsAndAllOtherTypesOfComputersASCII: with specific test context and state.
	 *		.text : PCs and all other types of computers (ASCII)
	 * 		.class : .Radiobutton
	 * 		.name : PCs and all other types of computers (ASCII)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject cs_ascii(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("cs_ascii"), anchor, flags);
	}
	
	/**
	 * EncodedText: with default state.
	 *		.text : Encoded Text
	 * 		.class : .Radiobutton
	 * 		.name : Encoded Text
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject cs_encoded() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("cs_encoded"));
	}
	/**
	 * EncodedText: with specific test context and state.
	 *		.text : Encoded Text
	 * 		.class : .Radiobutton
	 * 		.name : Encoded Text
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject cs_encoded(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("cs_encoded"), anchor, flags);
	}
	
	/**
	 * UnicodeText: with default state.
	 *		.text : Unicode Text
	 * 		.class : .Radiobutton
	 * 		.name : Unicode Text
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject cs_unicode() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("cs_unicode"));
	}
	/**
	 * UnicodeText: with specific test context and state.
	 *		.text : Unicode Text
	 * 		.class : .Radiobutton
	 * 		.name : Unicode Text
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject cs_unicode(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("cs_unicode"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_cancel"), anchor, flags);
	}
	
	/**
	 * FieldDefinition: with default state.
	 *		.text : Field Definition
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Field Definition
	 */
	protected TopLevelSubitemTestObject ddw_fd() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ddw_fd"));
	}
	/**
	 * FieldDefinition: with specific test context and state.
	 *		.text : Field Definition
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Field Definition
	 */
	protected TopLevelSubitemTestObject ddw_fd(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ddw_fd"), anchor, flags);
	}
	
	/**
	 * Finish: with default state.
	 *		.text : Finish
	 * 		.class : .Pushbutton
	 * 		.name : Finish
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_finish() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_finish"));
	}
	/**
	 * Finish: with specific test context and state.
	 *		.text : Finish
	 * 		.class : .Pushbutton
	 * 		.name : Finish
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_finish(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_finish"), anchor, flags);
	}
	
	/**
	 * Hint: with default state.
	 *		.class : .Grouping
	 * 		.name : Hint:
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject ddw_hint() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_hint"));
	}
	/**
	 * Hint: with specific test context and state.
	 *		.class : .Grouping
	 * 		.name : Hint:
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject ddw_hint(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_hint"), anchor, flags);
	}
	
	/**
	 * FileExtensionFilNotSupportedForExcelImportSupportedExtensionsAreXlsXlsx: with default state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject ddw_msg() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_msg"));
	}
	/**
	 * FileExtensionFilNotSupportedForExcelImportSupportedExtensionsAreXlsXlsx: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject ddw_msg(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_msg"), anchor, flags);
	}
	
	/**
	 * ACLServersDoNotSupportThisFileType: with default state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject ddw_msg1() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_msg1"));
	}
	/**
	 * ACLServersDoNotSupportThisFileType: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject ddw_msg1(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_msg1"), anchor, flags);
	}
	
	/**
	 * AnErrorHasBeenDetectedOnLine1OfThisDataFileDoYouWishToContinueAnyway: with default state.
	 *		.class : Static
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject ddw_msgcancel() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_msgcancel"));
	}
	/**
	 * AnErrorHasBeenDetectedOnLine1OfThisDataFileDoYouWishToContinueAnyway: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject ddw_msgcancel(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_msgcancel"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.text : Next >
	 * 		.class : .Pushbutton
	 * 		.name : Next >
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_next() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.text : Next >
	 * 		.class : .Pushbutton
	 * 		.name : Next >
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_next(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_next"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_ok"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_ok1() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_ok1"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_ok1(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_ok1"), anchor, flags);
	}
	
	/**
	 * RecordDefinition: with default state.
	 *		.text : Record Definition
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Record Definition
	 */
	protected TopLevelSubitemTestObject ddw_rd() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ddw_rd"));
	}
	/**
	 * RecordDefinition: with specific test context and state.
	 *		.text : Record Definition
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Record Definition
	 */
	protected TopLevelSubitemTestObject ddw_rd(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ddw_rd"), anchor, flags);
	}
	
	/**
	 * DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLProjectDataSourceDD: with default state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject ddw_selectfilemsg() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_selectfilemsg"));
	}
	/**
	 * DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLProjectDataSourceDD: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject ddw_selectfilemsg(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("ddw_selectfilemsg"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_selectfileok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_selectfileok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_selectfileok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_selectfileok"), anchor, flags);
	}
	
	/**
	 * SpecifyRecordType: with default state.
	 *		.text : Specify Record Type
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Specify Record Type
	 */
	protected TopLevelSubitemTestObject ddw_specifyrecordtype() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ddw_specifyrecordtype"));
	}
	/**
	 * SpecifyRecordType: with specific test context and state.
	 *		.text : Specify Record Type
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Specify Record Type
	 */
	protected TopLevelSubitemTestObject ddw_specifyrecordtype(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("ddw_specifyrecordtype"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_xmlcancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_xmlcancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_xmlcancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_xmlcancel"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.text : Yes
	 * 		.class : .Pushbutton
	 * 		.name : Yes
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_yescancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_yescancel"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.text : Yes
	 * 		.class : .Pushbutton
	 * 		.name : Yes
	 * 		.classIndex : 0
	 */
	protected GuiTestObject ddw_yescancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ddw_yescancel"), anchor, flags);
	}
	
	/**
	 * Field_11: with default state.
	 *		.text : Name
	 * 		.class : Edit
	 * 		.name : Name
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject fd_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("fd_name"));
	}
	/**
	 * Field_11: with specific test context and state.
	 *		.text : Name
	 * 		.class : Edit
	 * 		.name : Name
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject fd_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("fd_name"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject fd_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("fd_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject fd_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("fd_ok"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Type
	 * 		.class : ComboBox
	 * 		.name : Type
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject fd_type() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("fd_type"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Type
	 * 		.class : ComboBox
	 * 		.name : Type
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject fd_type(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("fd_type"), anchor, flags);
	}
	
	/**
	 * dBASECompatibleFile: with default state.
	 *		.text : dBASE compatible file
	 * 		.class : .Radiobutton
	 * 		.name : dBASE compatible file
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_dbase() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_dbase"));
	}
	/**
	 * dBASECompatibleFile: with specific test context and state.
	 *		.text : dBASE compatible file
	 * 		.class : .Radiobutton
	 * 		.name : dBASE compatible file
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_dbase(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_dbase"), anchor, flags);
	}
	
	/**
	 * PDFAdobeAcrobatFile: with default state.
	 *		.text : PDF Adobe Acrobat file
	 * 		.class : .Radiobutton
	 * 		.name : PDF Adobe Acrobat file
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_pdf() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_pdf"));
	}
	/**
	 * PDFAdobeAcrobatFile: with specific test context and state.
	 *		.text : PDF Adobe Acrobat file
	 * 		.class : .Radiobutton
	 * 		.name : PDF Adobe Acrobat file
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_pdf(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_pdf"), anchor, flags);
	}
	
	/**
	 * PrintImageFileReportFile: with default state.
	 *		.text : Print Image File (Report File)
	 * 		.class : .Radiobutton
	 * 		.name : Print Image File (Report File)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_printimage() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_printimage"));
	}
	/**
	 * PrintImageFileReportFile: with specific test context and state.
	 *		.text : Print Image File (Report File)
	 * 		.class : .Radiobutton
	 * 		.name : Print Image File (Report File)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_printimage(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_printimage"), anchor, flags);
	}
	
	/**
	 * SAPPrivateFileFormatDART: with default state.
	 *		.text : SAP private file format / DART
	 * 		.class : .Radiobutton
	 * 		.name : SAP private file format / DART
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_sap() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_sap"));
	}
	/**
	 * SAPPrivateFileFormatDART: with specific test context and state.
	 *		.text : SAP private file format / DART
	 * 		.class : .Radiobutton
	 * 		.name : SAP private file format / DART
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_sap(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_sap"), anchor, flags);
	}
	
	/**
	 * XBRL21File: with default state.
	 *		.text : XBRL 2.1 file
	 * 		.class : .Radiobutton
	 * 		.name : XBRL 2.1 file
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_xbrl() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_xbrl"));
	}
	/**
	 * XBRL21File: with specific test context and state.
	 *		.text : XBRL 2.1 file
	 * 		.class : .Radiobutton
	 * 		.name : XBRL 2.1 file
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ff_xbrl(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ff_xbrl"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject finish_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("finish_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject finish_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("finish_ok"), anchor, flags);
	}
	
	/**
	 * t: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject finish_tablename() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("finish_tablename"));
	}
	/**
	 * t: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject finish_tablename(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("finish_tablename"), anchor, flags);
	}
	
	/**
	 * HtmlNoOpTopWindow: with default state.
	 *		.class : Html.NoOpTopWindow
	 */
	protected GuiTestObject fw_end() 
	{
		return new GuiTestObject(
                        getMappedTestObject("fw_end"));
	}
	/**
	 * HtmlNoOpTopWindow: with specific test context and state.
	 *		.class : Html.NoOpTopWindow
	 */
	protected GuiTestObject fw_end(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("fw_end"), anchor, flags);
	}
	
	/**
	 * Scrollbar: with default state.
	 *		.class : .Scrollbar
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject hint_scrollbar() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("hint_scrollbar"));
	}
	/**
	 * Scrollbar: with specific test context and state.
	 *		.class : .Scrollbar
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject hint_scrollbar(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("hint_scrollbar"), anchor, flags);
	}
	
	/**
	 * All: with default state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject pdffd_all() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("pdffd_all"));
	}
	/**
	 * All: with specific test context and state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject pdffd_all(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("pdffd_all"), anchor, flags);
	}
	
	/**
	 * Pages: with default state.
	 *		.text : Pages
	 * 		.class : .Radiobutton
	 * 		.name : Pages
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject pdffd_pages() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("pdffd_pages"));
	}
	/**
	 * Pages: with specific test context and state.
	 *		.text : Pages
	 * 		.class : .Radiobutton
	 * 		.name : Pages
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject pdffd_pages(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("pdffd_pages"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject pdffd_pages1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("pdffd_pages1"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject pdffd_pages1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("pdffd_pages1"), anchor, flags);
	}
	
	/**
	 * Pushbutton: with default state.
	 *		.text : null
	 * 		.class : .Pushbutton
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiTestObject rd_end_and() 
	{
		return new GuiTestObject(
                        getMappedTestObject("rd_end_and"));
	}
	/**
	 * Pushbutton: with specific test context and state.
	 *		.text : null
	 * 		.class : .Pushbutton
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiTestObject rd_end_and(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("rd_end_and"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject rd_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("rd_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject rd_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("rd_ok"), anchor, flags);
	}
	
	/**
	 * DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLProjectDataSourceDD: with default state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject replace_msg() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("replace_msg"));
	}
	/**
	 * DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLProjectDataSourceDD: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject replace_msg(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("replace_msg"), anchor, flags);
	}
	
	/**
	 * Yes: with default state.
	 *		.text : Yes
	 * 		.class : .Pushbutton
	 * 		.name : Yes
	 * 		.classIndex : 0
	 */
	protected GuiTestObject replace_yes() 
	{
		return new GuiTestObject(
                        getMappedTestObject("replace_yes"));
	}
	/**
	 * Yes: with specific test context and state.
	 *		.text : Yes
	 * 		.class : .Pushbutton
	 * 		.name : Yes
	 * 		.classIndex : 0
	 */
	protected GuiTestObject replace_yes(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("replace_yes"), anchor, flags);
	}
	
	/**
	 * UseLocalLanguageFieldDescriptionsAsACLFieldNames: with default state.
	 *		.text : Use local language field descriptions as ACL field names
	 * 		.class : .Radiobutton
	 * 		.name : Use local language field descriptions as ACL field names
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sappff_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sappff_local"));
	}
	/**
	 * UseLocalLanguageFieldDescriptionsAsACLFieldNames: with specific test context and state.
	 *		.text : Use local language field descriptions as ACL field names
	 * 		.class : .Radiobutton
	 * 		.name : Use local language field descriptions as ACL field names
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sappff_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sappff_local"), anchor, flags);
	}
	
	/**
	 * UseStandardDeliveredSAPGermanAbbreviationsAsACLFieldNames: with default state.
	 *		.text : Use standard-delivered SAP German abbreviations as ACL field names.
	 * 		.class : .Radiobutton
	 * 		.name : Use standard-delivered SAP German abbreviations as ACL field names.
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sappff_standard() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sappff_standard"));
	}
	/**
	 * UseStandardDeliveredSAPGermanAbbreviationsAsACLFieldNames: with specific test context and state.
	 *		.text : Use standard-delivered SAP German abbreviations as ACL field names.
	 * 		.class : .Radiobutton
	 * 		.name : Use standard-delivered SAP German abbreviations as ACL field names.
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sappff_standard(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sappff_standard"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : RegularExpression(\.Pushbutton|.*)
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sf_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sf_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : RegularExpression(\.Pushbutton|.*)
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sf_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sf_cancel"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : File name:
	 * 		.class : ComboBox
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sf_localfilename() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sf_localfilename"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : File name:
	 * 		.class : ComboBox
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sf_localfilename(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sf_localfilename"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : File name:
	 * 		.class : ComboBox
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sf_localfilename1() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sf_localfilename1"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : File name:
	 * 		.class : ComboBox
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sf_localfilename1(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sf_localfilename1"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Look in:
	 * 		.class : ComboBox
	 * 		.name : Look in:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sf_lookin() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sf_lookin"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Look in:
	 * 		.class : ComboBox
	 * 		.name : Look in:
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sf_lookin(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sf_lookin"), anchor, flags);
	}
	
	/**
	 * Open: with default state.
	 *		.text : Open
	 * 		.class : RegularExpression(\.Pushbutton|.*)
	 * 		.name : Open
	 */
	protected GuiTestObject sf_open() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sf_open"));
	}
	/**
	 * Open: with specific test context and state.
	 *		.text : Open
	 * 		.class : RegularExpression(\.Pushbutton|.*)
	 * 		.name : Open
	 */
	protected GuiTestObject sf_open(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sf_open"), anchor, flags);
	}
	
	/**
	 * Save: with default state.
	 *		.text : Save
	 * 		.class : .Pushbutton
	 * 		.name : Save
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sf_save() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sf_save"));
	}
	/**
	 * Save: with specific test context and state.
	 *		.text : Save
	 * 		.class : .Pushbutton
	 * 		.name : Save
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sf_save(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sf_save"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : File name:
	 * 		.class : Edit
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject sf_serverfilename() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sf_serverfilename"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : File name:
	 * 		.class : Edit
	 * 		.name : File name:
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject sf_serverfilename(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sf_serverfilename"), anchor, flags);
	}
	
	/**
	 * Disk: with default state.
	 *		.text : Disk:
	 * 		.class : .Radiobutton
	 * 		.name : Disk:
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject slds_disk() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("slds_disk"));
	}
	/**
	 * Disk: with specific test context and state.
	 *		.text : Disk:
	 * 		.class : .Radiobutton
	 * 		.name : Disk:
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject slds_disk(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("slds_disk"), anchor, flags);
	}
	
	/**
	 * ExternalDefinition: with default state.
	 *		.text : External Definition:
	 * 		.class : .Radiobutton
	 * 		.name : External Definition:
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject slds_external() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("slds_external"));
	}
	/**
	 * ExternalDefinition: with specific test context and state.
	 *		.text : External Definition:
	 * 		.class : .Radiobutton
	 * 		.name : External Definition:
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject slds_external(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("slds_external"), anchor, flags);
	}
	
	/**
	 * ODBC: with default state.
	 *		.text : ODBC:
	 * 		.class : .Radiobutton
	 * 		.name : ODBC:
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject slds_odbc() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("slds_odbc"));
	}
	/**
	 * ODBC: with specific test context and state.
	 *		.text : ODBC:
	 * 		.class : .Radiobutton
	 * 		.name : ODBC:
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject slds_odbc(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("slds_odbc"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Radiobutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sp_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sp_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Radiobutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sp_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sp_local"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Select this option to use ACL to access the data.  You can access local or netwo ...
	 * 		.class : ComboBox
	 * 		.name : Select this option to use ACL to access the data.  You can access local or netwo ...
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sp_profile() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sp_profile"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Select this option to use ACL to access the data.  You can access local or netwo ...
	 * 		.class : ComboBox
	 * 		.name : Select this option to use ACL to access the data.  You can access local or netwo ...
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sp_profile(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sp_profile"), anchor, flags);
	}
	
	/**
	 * ACLServer: with default state.
	 *		.text : ACL Server
	 * 		.class : .Radiobutton
	 * 		.name : ACL Server
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sp_server() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sp_server"));
	}
	/**
	 * ACLServer: with specific test context and state.
	 *		.text : ACL Server
	 * 		.class : .Radiobutton
	 * 		.name : ACL Server
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sp_server(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sp_server"), anchor, flags);
	}
	
	/**
	 * NewRecord: with default state.
	 *		.text : New Record
	 * 		.class : .Radiobutton
	 * 		.name : New Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject specifyrecordtype_newrecord() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("specifyrecordtype_newrecord"));
	}
	/**
	 * NewRecord: with specific test context and state.
	 *		.text : New Record
	 * 		.class : .Radiobutton
	 * 		.name : New Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject specifyrecordtype_newrecord(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("specifyrecordtype_newrecord"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject specifyrecordtype_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("specifyrecordtype_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject specifyrecordtype_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("specifyrecordtype_ok"), anchor, flags);
	}
	
	/**
	 * DatabaseProfile: with default state.
	 *		.text : Database profile
	 * 		.class : .Radiobutton
	 * 		.name : Database profile
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ssds_dbProfile() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ssds_dbProfile"));
	}
	/**
	 * DatabaseProfile: with specific test context and state.
	 *		.text : Database profile
	 * 		.class : .Radiobutton
	 * 		.name : Database profile
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ssds_dbProfile(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ssds_dbProfile"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Your file is defined by either a COBOL or PL/1 file definition.
	 * 		.class : ComboBox
	 * 		.name : Your file is defined by either a COBOL or PL/1 file definition.
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject ssds_dbpros() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("ssds_dbpros"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Your file is defined by either a COBOL or PL/1 file definition.
	 * 		.class : ComboBox
	 * 		.name : Your file is defined by either a COBOL or PL/1 file definition.
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject ssds_dbpros(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("ssds_dbpros"), anchor, flags);
	}
	
	/**
	 * FlatFiles: with default state.
	 *		.text : Flat Files
	 * 		.class : .Radiobutton
	 * 		.name : Flat Files
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ssds_flatFiles() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ssds_flatFiles"));
	}
	/**
	 * FlatFiles: with specific test context and state.
	 *		.text : Flat Files
	 * 		.class : .Radiobutton
	 * 		.name : Flat Files
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject ssds_flatFiles(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("ssds_flatFiles"), anchor, flags);
	}
	
	/**
	 * TableLayoutOther_1DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLP: with default state.
	 *		.text : RegularExpression(Table Layout - .*)
	 * 		.class : ifd
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(Table Layout - .*)
	 */
	protected TopLevelSubitemTestObject tableLayout_View() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("tableLayout_View"));
	}
	/**
	 * TableLayoutOther_1DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLP: with specific test context and state.
	 *		.text : RegularExpression(Table Layout - .*)
	 * 		.class : ifd
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(Table Layout - .*)
	 */
	protected TopLevelSubitemTestObject tableLayout_View(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("tableLayout_View"), anchor, flags);
	}
	
	/**
	 * AddAll: with default state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_addall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_addall"));
	}
	/**
	 * AddAll: with specific test context and state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_addall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_addall"), anchor, flags);
	}
	
	/**
	 * DeselectAll: with default state.
	 *		.text : Deselect All
	 * 		.class : .Pushbutton
	 * 		.name : Deselect All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_deselectall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_deselectall"));
	}
	/**
	 * DeselectAll: with specific test context and state.
	 *		.text : Deselect All
	 * 		.class : .Pushbutton
	 * 		.name : Deselect All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_deselectall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_deselectall"), anchor, flags);
	}
	
	/**
	 * Forever: with default state.
	 *		.text : Forever
	 * 		.class : .Radiobutton
	 * 		.name : Forever
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject xbrl_forever() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("xbrl_forever"));
	}
	/**
	 * Forever: with specific test context and state.
	 *		.text : Forever
	 * 		.class : .Radiobutton
	 * 		.name : Forever
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject xbrl_forever(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("xbrl_forever"), anchor, flags);
	}
	
	/**
	 * Instant: with default state.
	 *		.text : Instant
	 * 		.class : .Radiobutton
	 * 		.name : Instant
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject xbrl_instant() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("xbrl_instant"));
	}
	/**
	 * Instant: with specific test context and state.
	 *		.text : Instant
	 * 		.class : .Radiobutton
	 * 		.name : Instant
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject xbrl_instant(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("xbrl_instant"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : Available Contexts
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject xbrl_leftlistbox() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("xbrl_leftlistbox"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Available Contexts
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject xbrl_leftlistbox(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("xbrl_leftlistbox"), anchor, flags);
	}
	
	/**
	 * _: with default state.
	 *		.text : <--
	 * 		.class : .Pushbutton
	 * 		.name : <--
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_moveleft() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_moveleft"));
	}
	/**
	 * _: with specific test context and state.
	 *		.text : <--
	 * 		.class : .Pushbutton
	 * 		.name : <--
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_moveleft(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_moveleft"), anchor, flags);
	}
	
	/**
	 * _: with default state.
	 *		.text : -->
	 * 		.class : .Pushbutton
	 * 		.name : -->
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_moveright() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_moveright"));
	}
	/**
	 * _: with specific test context and state.
	 *		.text : -->
	 * 		.class : .Pushbutton
	 * 		.name : -->
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_moveright(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_moveright"), anchor, flags);
	}
	
	/**
	 * Period: with default state.
	 *		.text : Period
	 * 		.class : .Radiobutton
	 * 		.name : Period
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject xbrl_period() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("xbrl_period"));
	}
	/**
	 * Period: with specific test context and state.
	 *		.text : Period
	 * 		.class : .Radiobutton
	 * 		.name : Period
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject xbrl_period(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("xbrl_period"), anchor, flags);
	}
	
	/**
	 * RemoveAll: with default state.
	 *		.text : Remove All
	 * 		.class : .Pushbutton
	 * 		.name : Remove All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_removeall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_removeall"));
	}
	/**
	 * RemoveAll: with specific test context and state.
	 *		.text : Remove All
	 * 		.class : .Pushbutton
	 * 		.name : Remove All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_removeall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_removeall"), anchor, flags);
	}
	
	/**
	 * ReverseSelection: with default state.
	 *		.text : Reverse Selection
	 * 		.class : .Pushbutton
	 * 		.name : Reverse Selection
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_reverseselection() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_reverseselection"));
	}
	/**
	 * ReverseSelection: with specific test context and state.
	 *		.text : Reverse Selection
	 * 		.class : .Pushbutton
	 * 		.name : Reverse Selection
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_reverseselection(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_reverseselection"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : Selected Contexts
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject xbrl_rightlistbox() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("xbrl_rightlistbox"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Selected Contexts
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject xbrl_rightlistbox(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("xbrl_rightlistbox"), anchor, flags);
	}
	
	/**
	 * SelectAll: with default state.
	 *		.text : Select All
	 * 		.class : .Pushbutton
	 * 		.name : Select All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_selectall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_selectall"));
	}
	/**
	 * SelectAll: with specific test context and state.
	 *		.text : Select All
	 * 		.class : .Pushbutton
	 * 		.name : Select All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject xbrl_selectall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("xbrl_selectall"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject xbrl_syslistview() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("xbrl_syslistview"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject xbrl_syslistview(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("xbrl_syslistview"), anchor, flags);
	}
	
	

	protected moreddwmenuHelper()
	{
		setScriptName("ACL_Desktop.Tasks.moreddwmenu");
	}
	
}

