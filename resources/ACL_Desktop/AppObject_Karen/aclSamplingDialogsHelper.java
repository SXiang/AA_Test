// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.ACL_Desktop.AppObject_Karen;
import lib.acl.helper.sup.ObjectHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>aclSamplingDialogs</b><br>
 * Generated     : <b>2012/04/18 5:43:56 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 build 7601 Service Pack 1 <br>
 * 
 * @since  April 18, 2012
 * @author Karen_zou
 */
public abstract class aclSamplingDialogsHelper extends lib.acl.helper.sup.ObjectHelper
{
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject error_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("error_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject error_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("error_ok"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject evaluate_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("evaluate_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject evaluate_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("evaluate_cancel"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Confidence
	 * 		.class : Edit
	 * 		.name : Confidence
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject evaluate_confidence() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_confidence"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Confidence
	 * 		.class : Edit
	 * 		.name : Confidence
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject evaluate_confidence(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_confidence"), anchor, flags);
	}
	
	/**
	 * _INTERVALIsUndefined: with default state.
	 *		.class : .Statictext
	 * 		.name : 'INTERVAL' is undefined 
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject evaluate_error() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("evaluate_error"));
	}
	/**
	 * _INTERVALIsUndefined: with specific test context and state.
	 *		.class : .Statictext
	 * 		.name : 'INTERVAL' is undefined 
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject evaluate_error(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("evaluate_error"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject evaluate_error_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("evaluate_error_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject evaluate_error_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("evaluate_error_ok"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Item amount, Error
	 * 		.class : Edit
	 * 		.name : Item amount, Error
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject evaluate_errors() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_errors"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Item amount, Error
	 * 		.class : Edit
	 * 		.name : Item amount, Error
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject evaluate_errors(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_errors"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Interval
	 * 		.class : Edit
	 * 		.name : Interval
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject evaluate_interval() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_interval"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Interval
	 * 		.class : Edit
	 * 		.name : Interval
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject evaluate_interval(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_interval"), anchor, flags);
	}
	
	/**
	 * Monetary: with default state.
	 *		.text : Monetary
	 * 		.class : .Radiobutton
	 * 		.name : Monetary
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject evaluate_monetary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("evaluate_monetary"));
	}
	/**
	 * Monetary: with specific test context and state.
	 *		.text : Monetary
	 * 		.class : .Radiobutton
	 * 		.name : Monetary
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject evaluate_monetary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("evaluate_monetary"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Number of Errors
	 * 		.class : Edit
	 * 		.name : Number of Errors
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject evaluate_numbererrs() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_numbererrs"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Number of Errors
	 * 		.class : Edit
	 * 		.name : Number of Errors
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject evaluate_numbererrs(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_numbererrs"), anchor, flags);
	}
	
	/**
	 * Record: with default state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject evaluate_record() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("evaluate_record"));
	}
	/**
	 * Record: with specific test context and state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject evaluate_record(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("evaluate_record"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Interval
	 * 		.class : Edit
	 * 		.name : Interval
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject evaluate_samplesize() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_samplesize"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Interval
	 * 		.class : Edit
	 * 		.name : Interval
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject evaluate_samplesize(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("evaluate_samplesize"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject expr_availablefields() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("expr_availablefields"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject expr_availablefields(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("expr_availablefields"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject expr_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("expr_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject expr_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("expr_cancel"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Expression
	 * 		.class : Edit
	 * 		.name : Expression
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject expr_expression() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("expr_expression"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Expression
	 * 		.class : Edit
	 * 		.name : Expression
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject expr_expression(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("expr_expression"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : Filters
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject expr_filters() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("expr_filters"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Filters
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject expr_filters(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("expr_filters"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : From Table
	 * 		.class : ComboBox
	 * 		.name : From Table
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject expr_fromtable() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("expr_fromtable"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : From Table
	 * 		.class : ComboBox
	 * 		.name : From Table
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject expr_fromtable(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("expr_fromtable"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject expr_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("expr_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject expr_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("expr_ok"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Save As
	 * 		.class : Edit
	 * 		.name : Save As
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject expr_saveas() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("expr_saveas"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Save As
	 * 		.class : Edit
	 * 		.name : Save As
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject expr_saveas(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("expr_saveas"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : Variables
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject expr_variables() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("expr_variables"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Variables
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject expr_variables(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("expr_variables"), anchor, flags);
	}
	
	/**
	 * Size: with default state.
	 *		.text : RegularExpression(More\.\.\.|Output\.\.\.)
	 * 		.class : #32770
	 * 		.name : RegularExpression(More\.\.\.|Output\.\.\.)
	 * 		.classIndex : RegularExpression(0|1|2)
	 */
	protected GuiSubitemTestObject mainWin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin"));
	}
	/**
	 * Size: with specific test context and state.
	 *		.text : RegularExpression(More\.\.\.|Output\.\.\.)
	 * 		.class : #32770
	 * 		.name : RegularExpression(More\.\.\.|Output\.\.\.)
	 * 		.classIndex : RegularExpression(0|1|2)
	 */
	protected GuiSubitemTestObject mainWin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin"), anchor, flags);
	}
	
	/**
	 * Size: with default state.
	 *		.text : Size
	 * 		.class : #32770
	 * 		.name : Size
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_Sample_Size() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_Sample_Size"));
	}
	/**
	 * Size: with specific test context and state.
	 *		.text : Size
	 * 		.class : #32770
	 * 		.name : Size
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_Sample_Size(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_Sample_Size"), anchor, flags);
	}
	
	/**
	 * Evaluate: with default state.
	 *		.text : Evaluate
	 * 		.class : #32770
	 * 		.name : Evaluate
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_evaluate() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_evaluate"));
	}
	/**
	 * Evaluate: with specific test context and state.
	 *		.text : Evaluate
	 * 		.class : #32770
	 * 		.name : Evaluate
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_evaluate(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_evaluate"), anchor, flags);
	}
	
	/**
	 * Sample: with default state.
	 *		.text : Sample
	 * 		.class : #32770
	 * 		.name : Sample
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_sample() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_sample"));
	}
	/**
	 * Sample: with specific test context and state.
	 *		.text : Sample
	 * 		.class : #32770
	 * 		.name : Sample
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_sample(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_sample"), anchor, flags);
	}
	
	/**
	 * Size: with default state.
	 *		.text : Size
	 * 		.class : #32770
	 * 		.name : Size
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_size() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_size"));
	}
	/**
	 * Size: with specific test context and state.
	 *		.text : Size
	 * 		.class : #32770
	 * 		.name : Size
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject mainWin_size(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin_size"), anchor, flags);
	}
	
	/**
	 * Options: with default state.
	 *		.text : ACL 9|Options|Server*|Security*|Select*|Data Definition*|.+
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(ACL 9|Options|Server*|Security*|Select*|Data Definition*|.+)
	 */
	protected TopLevelSubitemTestObject main_error_win() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("main_error_win"));
	}
	/**
	 * Options: with specific test context and state.
	 *		.text : ACL 9|Options|Server*|Security*|Select*|Data Definition*|.+
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(ACL 9|Options|Server*|Security*|Select*|Data Definition*|.+)
	 */
	protected TopLevelSubitemTestObject main_error_win(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("main_error_win"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject main_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("main_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject main_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("main_ok"), anchor, flags);
	}
	
	/**
	 * Fields: with default state.
	 *		.text : Fields
	 * 		.class : .Radiobutton
	 * 		.name : Fields
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreSample_fields() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreSample_fields"));
	}
	/**
	 * Fields: with specific test context and state.
	 *		.text : Fields
	 * 		.class : .Radiobutton
	 * 		.name : Fields
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreSample_fields(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreSample_fields"), anchor, flags);
	}
	
	/**
	 * Record: with default state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreSample_record() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreSample_record"));
	}
	/**
	 * Record: with specific test context and state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreSample_record(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreSample_record"), anchor, flags);
	}
	
	/**
	 * All: with default state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_all() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_all"));
	}
	/**
	 * All: with specific test context and state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_all(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_all"), anchor, flags);
	}
	
	/**
	 * AppendToExistingFile: with default state.
	 *		.text : Append To Existing File
	 * 		.class : .Checkbutton
	 * 		.name : Append To Existing File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_append() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_append"));
	}
	/**
	 * AppendToExistingFile: with specific test context and state.
	 *		.text : Append To Existing File
	 * 		.class : .Checkbutton
	 * 		.name : Append To Existing File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_append(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_append"), anchor, flags);
	}
	
	/**
	 * ExtractFields: with default state.
	 *		.text : Extract Fields...
	 * 		.class : .Pushbutton
	 * 		.name : Extract Fields...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject more_extractfields() 
	{
		return new GuiTestObject(
                        getMappedTestObject("more_extractfields"));
	}
	/**
	 * ExtractFields: with specific test context and state.
	 *		.text : Extract Fields...
	 * 		.class : .Pushbutton
	 * 		.name : Extract Fields...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject more_extractfields(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("more_extractfields"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject more_fieldstable() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("more_fieldstable"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject more_fieldstable(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("more_fieldstable"), anchor, flags);
	}
	
	/**
	 * First: with default state.
	 *		.text : First
	 * 		.class : .Radiobutton
	 * 		.name : First
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_first() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_first"));
	}
	/**
	 * First: with specific test context and state.
	 *		.text : First
	 * 		.class : .Radiobutton
	 * 		.name : First
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_first(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_first"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject more_firsttext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_firsttext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject more_firsttext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_firsttext"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.text : Next
	 * 		.class : .Radiobutton
	 * 		.name : Next
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_next() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.text : Next
	 * 		.class : .Radiobutton
	 * 		.name : Next
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_next(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_next"), anchor, flags);
	}
	
	/**
	 * NoRepeats: with default state.
	 *		.text : No Repeats
	 * 		.class : .Checkbutton
	 * 		.name : No Repeats
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_norepeats() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_norepeats"));
	}
	/**
	 * NoRepeats: with specific test context and state.
	 *		.text : No Repeats
	 * 		.class : .Checkbutton
	 * 		.name : No Repeats
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_norepeats(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_norepeats"), anchor, flags);
	}
	
	/**
	 * Subsample: with default state.
	 *		.text : Subsample
	 * 		.class : .Checkbutton
	 * 		.name : Subsample
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_subsample() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_subsample"));
	}
	/**
	 * Subsample: with specific test context and state.
	 *		.text : Subsample
	 * 		.class : .Checkbutton
	 * 		.name : Subsample
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_subsample(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_subsample"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject outputFooter_moreWhile_text() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("outputFooter_moreWhile_text"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject outputFooter_moreWhile_text(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("outputFooter_moreWhile_text"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject outputHeader_moreNext_text() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("outputHeader_moreNext_text"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject outputHeader_moreNext_text(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("outputHeader_moreNext_text"), anchor, flags);
	}
	
	/**
	 * File: with default state.
	 *		.text : File
	 * 		.class : .Radiobutton
	 * 		.name : File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_file() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_file"));
	}
	/**
	 * File: with specific test context and state.
	 *		.text : File
	 * 		.class : .Radiobutton
	 * 		.name : File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_file(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_file"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject output_filetype() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("output_filetype"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject output_filetype(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("output_filetype"), anchor, flags);
	}
	
	/**
	 * Graph: with default state.
	 *		.text : Graph
	 * 		.class : .Radiobutton
	 * 		.name : Graph
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_graph() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_graph"));
	}
	/**
	 * Graph: with specific test context and state.
	 *		.text : Graph
	 * 		.class : .Radiobutton
	 * 		.name : Graph
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_graph(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_graph"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_local"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : RegularExpression(Name\.\.\.)
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject output_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_name"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : RegularExpression(Name\.\.\.)
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject output_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_name"), anchor, flags);
	}
	
	/**
	 * Print: with default state.
	 *		.text : Print
	 * 		.class : .Radiobutton
	 * 		.name : Print
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_print() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_print"));
	}
	/**
	 * Print: with specific test context and state.
	 *		.text : Print
	 * 		.class : .Radiobutton
	 * 		.name : Print
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_print(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_print"), anchor, flags);
	}
	
	/**
	 * Screen: with default state.
	 *		.text : Screen
	 * 		.class : .Radiobutton
	 * 		.name : Screen
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_screen() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_screen"));
	}
	/**
	 * Screen: with specific test context and state.
	 *		.text : Screen
	 * 		.class : .Radiobutton
	 * 		.name : Screen
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_screen(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_screen"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sampleOn_selectedFields_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sampleOn_selectedFields_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sampleOn_selectedFields_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sampleOn_selectedFields_ok"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_cancel"), anchor, flags);
	}
	
	/**
	 * Cell: with default state.
	 *		.text : Cell
	 * 		.class : .Radiobutton
	 * 		.name : Cell
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_cell() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_cell"));
	}
	/**
	 * Cell: with specific test context and state.
	 *		.text : Cell
	 * 		.class : .Radiobutton
	 * 		.name : Cell
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_cell(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_cell"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Cutoff
	 * 		.class : Edit
	 * 		.name : Cutoff
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject sample_cutoff() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_cutoff"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Cutoff
	 * 		.class : Edit
	 * 		.name : Cutoff
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject sample_cutoff(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_cutoff"), anchor, flags);
	}
	
	/**
	 * FixedInterval: with default state.
	 *		.text : Fixed Interval
	 * 		.class : .Radiobutton
	 * 		.name : Fixed Interval
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_fixedinterval() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_fixedinterval"));
	}
	/**
	 * FixedInterval: with specific test context and state.
	 *		.text : Fixed Interval
	 * 		.class : .Radiobutton
	 * 		.name : Fixed Interval
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_fixedinterval(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_fixedinterval"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject sample_if() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_if"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 6
	 */
	protected TextGuiTestObject sample_if(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_if"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Interval
	 * 		.class : Edit
	 * 		.name : Interval
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject sample_interval() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_interval"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Interval
	 * 		.class : Edit
	 * 		.name : Interval
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject sample_interval(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_interval"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_local"), anchor, flags);
	}
	
	/**
	 * MUS: with default state.
	 *		.text : MUS
	 * 		.class : .Radiobutton
	 * 		.name : MUS
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_mus() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_mus"));
	}
	/**
	 * MUS: with specific test context and state.
	 *		.text : MUS
	 * 		.class : .Radiobutton
	 * 		.name : MUS
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_mus(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_mus"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Population
	 * 		.class : Edit
	 * 		.name : Population
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject sample_population() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_population"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Population
	 * 		.class : Edit
	 * 		.name : Population
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject sample_population(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_population"), anchor, flags);
	}
	
	/**
	 * Random: with default state.
	 *		.text : Random
	 * 		.class : .Radiobutton
	 * 		.name : Random
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_random() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_random"));
	}
	/**
	 * Random: with specific test context and state.
	 *		.text : Random
	 * 		.class : .Radiobutton
	 * 		.name : Random
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_random(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_random"), anchor, flags);
	}
	
	/**
	 * Record: with default state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_record() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_record"));
	}
	/**
	 * Record: with specific test context and state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_record(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_record"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sample_sampleon() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sample_sampleon"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject sample_sampleon(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("sample_sampleon"), anchor, flags);
	}
	
	/**
	 * SampleOn: with default state.
	 *		.text : Sample On...
	 * 		.class : .Pushbutton
	 * 		.name : Sample On...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_sampleonbtn() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_sampleonbtn"));
	}
	/**
	 * SampleOn: with specific test context and state.
	 *		.text : Sample On...
	 * 		.class : .Pushbutton
	 * 		.name : Sample On...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_sampleonbtn(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_sampleonbtn"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Seed
	 * 		.class : Edit
	 * 		.name : Seed
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject sample_seed() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_seed"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Seed
	 * 		.class : Edit
	 * 		.name : Seed
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject sample_seed(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_seed"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Size
	 * 		.class : Edit
	 * 		.name : Size
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject sample_size() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Size
	 * 		.class : Edit
	 * 		.name : Size
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject sample_size(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size"), anchor, flags);
	}
	
	/**
	 * Calculate: with default state.
	 *		.text : Calculate
	 * 		.class : .Pushbutton
	 * 		.name : Calculate
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_size_calculatebtn() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_size_calculatebtn"));
	}
	/**
	 * Calculate: with specific test context and state.
	 *		.text : Calculate
	 * 		.class : .Pushbutton
	 * 		.name : Calculate
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_size_calculatebtn(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_size_calculatebtn"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_size_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_size_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_size_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_size_cancel"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Confidence
	 * 		.class : Edit
	 * 		.name : Confidence
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject sample_size_confidence() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_confidence"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Confidence
	 * 		.class : Edit
	 * 		.name : Confidence
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject sample_size_confidence(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_confidence"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject sample_size_expectederrrate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_expectederrrate"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject sample_size_expectederrrate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_expectederrrate"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject sample_size_expectedtotalerrs() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_expectedtotalerrs"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject sample_size_expectedtotalerrs(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_expectedtotalerrs"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject sample_size_materiality() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_materiality"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject sample_size_materiality(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_materiality"), anchor, flags);
	}
	
	/**
	 * Monetary: with default state.
	 *		.text : Monetary
	 * 		.class : .Radiobutton
	 * 		.name : Monetary
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_size_monetary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_size_monetary"));
	}
	/**
	 * Monetary: with specific test context and state.
	 *		.text : Monetary
	 * 		.class : .Radiobutton
	 * 		.name : Monetary
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_size_monetary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_size_monetary"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_size_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_size_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_size_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_size_ok"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Population 
	 * 		.class : Edit
	 * 		.name : Population 
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject sample_size_population() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_population"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Population 
	 * 		.class : Edit
	 * 		.name : Population 
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject sample_size_population(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_population"), anchor, flags);
	}
	
	/**
	 * Record: with default state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_size_record() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_size_record"));
	}
	/**
	 * Record: with specific test context and state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_size_record(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_size_record"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject sample_size_uppererrlimit() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_uppererrlimit"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject sample_size_uppererrlimit(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_size_uppererrlimit"), anchor, flags);
	}
	
	/**
	 * Size: with default state.
	 *		.text : Size...
	 * 		.class : .Pushbutton
	 * 		.name : Size...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_sizebtn() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_sizebtn"));
	}
	/**
	 * Size: with specific test context and state.
	 *		.text : Size...
	 * 		.class : .Pushbutton
	 * 		.name : Size...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sample_sizebtn(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sample_sizebtn"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Start
	 * 		.class : Edit
	 * 		.name : Start
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject sample_start() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_start"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Start
	 * 		.class : Edit
	 * 		.name : Start
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject sample_start(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_start"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject sample_to() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_to"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 7
	 */
	protected TextGuiTestObject sample_to(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("sample_to"), anchor, flags);
	}
	
	/**
	 * UseOutputTable: with default state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_useoutputtable() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_useoutputtable"));
	}
	/**
	 * UseOutputTable: with specific test context and state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject sample_useoutputtable(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("sample_useoutputtable"), anchor, flags);
	}
	
	/**
	 * Expr: with default state.
	 *		.text : Expr...
	 * 		.class : .Pushbutton
	 * 		.name : Expr...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sampleon_expr() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sampleon_expr"));
	}
	/**
	 * Expr: with specific test context and state.
	 *		.text : Expr...
	 * 		.class : .Pushbutton
	 * 		.name : Expr...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sampleon_expr(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sampleon_expr"), anchor, flags);
	}
	
	/**
	 * _: with default state.
	 *		.text : -->
	 * 		.class : .Pushbutton
	 * 		.name : -->
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sampleon_movetoright() 
	{
		return new GuiTestObject(
                        getMappedTestObject("sampleon_movetoright"));
	}
	/**
	 * _: with specific test context and state.
	 *		.text : -->
	 * 		.class : .Pushbutton
	 * 		.name : -->
	 * 		.classIndex : 0
	 */
	protected GuiTestObject sampleon_movetoright(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("sampleon_movetoright"), anchor, flags);
	}
	
	/**
	 * AddAll: with default state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject selectedfields_addall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("selectedfields_addall"));
	}
	/**
	 * AddAll: with specific test context and state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject selectedfields_addall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("selectedfields_addall"), anchor, flags);
	}
	
	/**
	 * Calculate: with default state.
	 *		.text : Calculate
	 * 		.class : .Pushbutton
	 * 		.name : Calculate
	 * 		.classIndex : 0
	 */
	protected GuiTestObject size_calculatebtn() 
	{
		return new GuiTestObject(
                        getMappedTestObject("size_calculatebtn"));
	}
	/**
	 * Calculate: with specific test context and state.
	 *		.text : Calculate
	 * 		.class : .Pushbutton
	 * 		.name : Calculate
	 * 		.classIndex : 0
	 */
	protected GuiTestObject size_calculatebtn(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("size_calculatebtn"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject size_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("size_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject size_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("size_cancel"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Confidence
	 * 		.class : Edit
	 * 		.name : Confidence
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject size_confidence() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_confidence"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Confidence
	 * 		.class : Edit
	 * 		.name : Confidence
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject size_confidence(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_confidence"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject size_expectederrrate() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_expectederrrate"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 5
	 */
	protected TextGuiTestObject size_expectederrrate(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_expectederrrate"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject size_expectedtotalerrs() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_expectedtotalerrs"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Expected Error Rate (%)
	 * 		.class : Edit
	 * 		.name : Expected Error Rate (%)
	 * 		.classIndex : 4
	 */
	protected TextGuiTestObject size_expectedtotalerrs(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_expectedtotalerrs"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject size_materiality() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_materiality"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject size_materiality(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_materiality"), anchor, flags);
	}
	
	/**
	 * Monetary: with default state.
	 *		.text : Monetary
	 * 		.class : .Radiobutton
	 * 		.name : Monetary
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject size_monetary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("size_monetary"));
	}
	/**
	 * Monetary: with specific test context and state.
	 *		.text : Monetary
	 * 		.class : .Radiobutton
	 * 		.name : Monetary
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject size_monetary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("size_monetary"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Population 
	 * 		.class : Edit
	 * 		.name : Population 
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject size_population() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_population"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Population 
	 * 		.class : Edit
	 * 		.name : Population 
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject size_population(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_population"), anchor, flags);
	}
	
	/**
	 * Record: with default state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject size_record() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("size_record"));
	}
	/**
	 * Record: with specific test context and state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject size_record(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("size_record"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject size_uppererrlimit() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_uppererrlimit"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Upper Error Limit (%)
	 * 		.class : Edit
	 * 		.name : Upper Error Limit (%)
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject size_uppererrlimit(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("size_uppererrlimit"), anchor, flags);
	}
	
	/**
	 * Size: with default state.
	 *		.text : Size
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Size
	 */
	protected TopLevelSubitemTestObject sizewindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("sizewindow"));
	}
	/**
	 * Size: with specific test context and state.
	 *		.text : Size
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Size
	 */
	protected TopLevelSubitemTestObject sizewindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("sizewindow"), anchor, flags);
	}
	
	/**
	 * Error: with default state.
	 *		.text : Error
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Error
	 */
	protected TopLevelSubitemTestObject win_EvaluateError() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("win_EvaluateError"));
	}
	/**
	 * Error: with specific test context and state.
	 *		.text : Error
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Error
	 */
	protected TopLevelSubitemTestObject win_EvaluateError(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("win_EvaluateError"), anchor, flags);
	}
	
	/**
	 * ACL9: with default state.
	 *		.text : ACL 9
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : ACL 9
	 */
	protected TopLevelSubitemTestObject win_SizeError() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("win_SizeError"));
	}
	/**
	 * ACL9: with specific test context and state.
	 *		.text : ACL 9
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : ACL 9
	 */
	protected TopLevelSubitemTestObject win_SizeError(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("win_SizeError"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject win_SizeError_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("win_SizeError_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject win_SizeError_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("win_SizeError_ok"), anchor, flags);
	}
	
	

	protected aclSamplingDialogsHelper()
	{
		setScriptName("ACL_Desktop.AppObject_Karen.aclSamplingDialogs");
	}
	
}

