// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.ACL_Desktop.AppObject;
import lib.acl.helper.sup.ObjectHelper;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;

/**
 * Script Name   : <b>aclDataDialogs</b><br>
 * Generated     : <b>2012/04/10 2:36:15 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows XP x86 5.1 build 2600 Service Pack 3 <br>
 * 
 * @since  April 10, 2012
 * @author Steven_Xiang
 */
public abstract class aclDataDialogsHelper extends lib.acl.helper.sup.ObjectHelper
{
	/**
	 * Add: with default state.
	 *		.text : Add
	 * 		.class : .Pushbutton
	 * 		.name : Add
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addTable_add() 
	{
		return new GuiTestObject(
                        getMappedTestObject("addTable_add"));
	}
	/**
	 * Add: with specific test context and state.
	 *		.text : Add
	 * 		.class : .Pushbutton
	 * 		.name : Add
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addTable_add(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("addTable_add"), anchor, flags);
	}
	
	/**
	 * Close: with default state.
	 *		.text : Close
	 * 		.class : .Pushbutton
	 * 		.name : Close
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addTable_close() 
	{
		return new GuiTestObject(
                        getMappedTestObject("addTable_close"));
	}
	/**
	 * Close: with specific test context and state.
	 *		.text : Close
	 * 		.class : .Pushbutton
	 * 		.name : Close
	 * 		.classIndex : 0
	 */
	protected GuiTestObject addTable_close(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("addTable_close"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject addTable_list() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("addTable_list"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject addTable_list(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("addTable_list"), anchor, flags);
	}
	
	/**
	 * AddAll: with default state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_addall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_addall"));
	}
	/**
	 * AddAll: with specific test context and state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_addall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_addall"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject crt_availablefields() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("crt_availablefields"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject crt_availablefields(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("crt_availablefields"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_cancel"), anchor, flags);
	}
	
	/**
	 * ClearAll: with default state.
	 *		.text : Clear All
	 * 		.class : .Pushbutton
	 * 		.name : Clear All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_clearall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_clearall"));
	}
	/**
	 * ClearAll: with specific test context and state.
	 *		.text : Clear All
	 * 		.class : .Pushbutton
	 * 		.name : Clear All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_clearall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_clearall"), anchor, flags);
	}
	
	/**
	 * _: with default state.
	 *		.text : <--
	 * 		.class : .Pushbutton
	 * 		.name : <--
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_deselect() 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_deselect"));
	}
	/**
	 * _: with specific test context and state.
	 *		.text : <--
	 * 		.class : .Pushbutton
	 * 		.name : <--
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_deselect(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_deselect"), anchor, flags);
	}
	
	/**
	 * LaunchCrystalReportsApplication: with default state.
	 *		.text : Launch Crystal Reports application
	 * 		.class : .Checkbutton
	 * 		.name : Launch Crystal Reports application
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject crt_launchCR() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("crt_launchCR"));
	}
	/**
	 * LaunchCrystalReportsApplication: with specific test context and state.
	 *		.text : Launch Crystal Reports application
	 * 		.class : .Checkbutton
	 * 		.name : Launch Crystal Reports application
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject crt_launchCR(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("crt_launchCR"), anchor, flags);
	}
	
	/**
	 * _: with default state.
	 *		.text : -->
	 * 		.class : .Pushbutton
	 * 		.name : -->
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_select() 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_select"));
	}
	/**
	 * _: with specific test context and state.
	 *		.text : -->
	 * 		.class : .Pushbutton
	 * 		.name : -->
	 * 		.classIndex : 0
	 */
	protected GuiTestObject crt_select(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("crt_select"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject crt_selectedfields() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("crt_selectedfields"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject crt_selectedfields(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("crt_selectedfields"), anchor, flags);
	}
	
	/**
	 * DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLProjectUnicodeRepor: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject crt_tempfile() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("crt_tempfile"));
	}
	/**
	 * DACLTFSViewRFT_AutomationQA_Automation_2012_V20ACLQA_AutomationACL_DesktopDATAACLProjectUnicodeRepor: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject crt_tempfile(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("crt_tempfile"), anchor, flags);
	}
	
	/**
	 * AnErrorHasBeenDetectedOnLine1OfThisDataFileDoYouWishToContinueAnyway: with default state.
	 *		.class : Static
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject error_msg() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("error_msg"));
	}
	/**
	 * AnErrorHasBeenDetectedOnLine1OfThisDataFileDoYouWishToContinueAnyway: with specific test context and state.
	 *		.class : Static
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject error_msg(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("error_msg"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject error_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("error_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject error_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("error_ok"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject exp_availabelfields() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_availabelfields"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject exp_availabelfields(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_availabelfields"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject exp_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("exp_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject exp_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("exp_cancel"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : Filters
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject exp_filters() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_filters"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Filters
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject exp_filters(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_filters"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : From Table
	 * 		.class : ComboBox
	 * 		.name : From Table
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject exp_fromtable() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("exp_fromtable"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : From Table
	 * 		.class : ComboBox
	 * 		.name : From Table
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject exp_fromtable(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("exp_fromtable"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject exp_functionlist() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_functionlist"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject exp_functionlist(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_functionlist"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Functions
	 * 		.class : ComboBox
	 * 		.name : Functions
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject exp_functions() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("exp_functions"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Functions
	 * 		.class : ComboBox
	 * 		.name : Functions
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject exp_functions(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("exp_functions"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject exp_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("exp_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject exp_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("exp_ok"), anchor, flags);
	}
	
	/**
	 * PasteParameters: with default state.
	 *		.text : Paste Parameters
	 * 		.class : .Checkbutton
	 * 		.name : Paste Parameters
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject exp_pasteParameters() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("exp_pasteParameters"));
	}
	/**
	 * PasteParameters: with specific test context and state.
	 *		.text : Paste Parameters
	 * 		.class : .Checkbutton
	 * 		.name : Paste Parameters
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject exp_pasteParameters(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("exp_pasteParameters"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Save As
	 * 		.class : Edit
	 * 		.name : Save As
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject exp_saveas() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("exp_saveas"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Save As
	 * 		.class : Edit
	 * 		.name : Save As
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject exp_saveas(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("exp_saveas"), anchor, flags);
	}
	
	/**
	 * ListBox: with default state.
	 *		.class : ListBox
	 * 		.name : Variables
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject exp_variables() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_variables"));
	}
	/**
	 * ListBox: with specific test context and state.
	 *		.class : ListBox
	 * 		.name : Variables
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject exp_variables(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("exp_variables"), anchor, flags);
	}
	
	/**
	 * Options: with default state.
	 *		.text : RegularExpression(ACL 9|Options|Server Profiles|Security*|Select|Data Definition ...
	 * 		.class : #32770
	 * 		.visible : true
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(ACL 9|Options|Server Profile|Security*|Select*|Data Definition ...
	 */
	protected TopLevelSubitemTestObject mainDialog() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("mainDialog"));
	}
	/**
	 * Options: with specific test context and state.
	 *		.text : RegularExpression(ACL 9|Options|Server Profiles|Security*|Select|Data Definition ...
	 * 		.class : #32770
	 * 		.visible : true
	 * 		.processName : ACLWin.exe
	 * 		.name : RegularExpression(ACL 9|Options|Server Profile|Security*|Select*|Data Definition ...
	 */
	protected TopLevelSubitemTestObject mainDialog(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("mainDialog"), anchor, flags);
	}
	
	/**
	 * CrystalReportsTemplateProperties: with default state.
	 *		.text : Crystal Reports Template Properties
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Crystal Reports Template Properties
	 */
	protected TopLevelSubitemTestObject mainDialog_CR() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("mainDialog_CR"));
	}
	/**
	 * CrystalReportsTemplateProperties: with specific test context and state.
	 *		.text : Crystal Reports Template Properties
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Crystal Reports Template Properties
	 */
	protected TopLevelSubitemTestObject mainDialog_CR(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("mainDialog_CR"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mainExport_if() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExport_if"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mainExport_if(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExport_if"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject mainExport_totext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExport_totext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject mainExport_totext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExport_totext"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mainExtract_iftext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExtract_iftext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mainExtract_iftext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExtract_iftext"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainExtract_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainExtract_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainExtract_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainExtract_local"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject mainExtract_totext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExtract_totext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject mainExtract_totext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainExtract_totext"), anchor, flags);
	}
	
	/**
	 * UseOutputTable: with default state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainExtract_useOutputTable() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainExtract_useOutputTable"));
	}
	/**
	 * UseOutputTable: with specific test context and state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainExtract_useOutputTable(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainExtract_useOutputTable"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mainJoin_if() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainJoin_if"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject mainJoin_if(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainJoin_if"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_local"), anchor, flags);
	}
	
	/**
	 * PrimaryFields: with default state.
	 *		.text : Primary Fields...
	 * 		.class : .Pushbutton
	 * 		.name : Primary Fields...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject mainJoin_pfields() 
	{
		return new GuiTestObject(
                        getMappedTestObject("mainJoin_pfields"));
	}
	/**
	 * PrimaryFields: with specific test context and state.
	 *		.text : Primary Fields...
	 * 		.class : .Pushbutton
	 * 		.name : Primary Fields...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject mainJoin_pfields(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("mainJoin_pfields"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject mainJoin_pfieldsTable() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_pfieldsTable"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject mainJoin_pfieldsTable(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_pfieldsTable"), anchor, flags);
	}
	
	/**
	 * PrimaryKeys: with default state.
	 *		.text : Primary Keys...
	 * 		.class : .Pushbutton
	 * 		.name : Primary Keys...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject mainJoin_pkeys() 
	{
		return new GuiTestObject(
                        getMappedTestObject("mainJoin_pkeys"));
	}
	/**
	 * PrimaryKeys: with specific test context and state.
	 *		.text : Primary Keys...
	 * 		.class : .Pushbutton
	 * 		.name : Primary Keys...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject mainJoin_pkeys(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("mainJoin_pkeys"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject mainJoin_pkeysTable() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_pkeysTable"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject mainJoin_pkeysTable(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_pkeysTable"), anchor, flags);
	}
	
	/**
	 * PresortPrimaryTable: with default state.
	 *		.text : Presort Primary Table
	 * 		.class : .Checkbutton
	 * 		.name : Presort Primary Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_ppresort() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_ppresort"));
	}
	/**
	 * PresortPrimaryTable: with specific test context and state.
	 *		.text : Presort Primary Table
	 * 		.class : .Checkbutton
	 * 		.name : Presort Primary Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_ppresort(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_ppresort"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject mainJoin_sfieldsTable() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_sfieldsTable"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 3
	 */
	protected SelectGuiSubitemTestObject mainJoin_sfieldsTable(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_sfieldsTable"), anchor, flags);
	}
	
	/**
	 * SecondaryKeys: with default state.
	 *		.text : Secondary Keys...
	 * 		.class : .Pushbutton
	 * 		.name : Secondary Keys...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject mainJoin_skeys() 
	{
		return new GuiTestObject(
                        getMappedTestObject("mainJoin_skeys"));
	}
	/**
	 * SecondaryKeys: with specific test context and state.
	 *		.text : Secondary Keys...
	 * 		.class : .Pushbutton
	 * 		.name : Secondary Keys...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject mainJoin_skeys(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("mainJoin_skeys"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject mainJoin_skeysTable() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_skeysTable"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected SelectGuiSubitemTestObject mainJoin_skeysTable(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_skeysTable"), anchor, flags);
	}
	
	/**
	 * PresortSecondaryTable: with default state.
	 *		.text : Presort Secondary Table
	 * 		.class : .Checkbutton
	 * 		.name : Presort Secondary Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_spresort() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_spresort"));
	}
	/**
	 * PresortSecondaryTable: with specific test context and state.
	 *		.text : Presort Secondary Table
	 * 		.class : .Checkbutton
	 * 		.name : Presort Secondary Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_spresort(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_spresort"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject mainJoin_stable() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_stable"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject mainJoin_stable(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("mainJoin_stable"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject mainJoin_to() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainJoin_to"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject mainJoin_to(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("mainJoin_to"), anchor, flags);
	}
	
	/**
	 * UseOutputTable: with default state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_useoutputtable() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_useoutputtable"));
	}
	/**
	 * UseOutputTable: with specific test context and state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainJoin_useoutputtable(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainJoin_useoutputtable"), anchor, flags);
	}
	
	/**
	 * Presort: with default state.
	 *		.text : Presort
	 * 		.class : .Checkbutton
	 * 		.name : Presort
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainMerge_presort() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainMerge_presort"));
	}
	/**
	 * Presort: with specific test context and state.
	 *		.text : Presort
	 * 		.class : .Checkbutton
	 * 		.name : Presort
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject mainMerge_presort(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("mainMerge_presort"), anchor, flags);
	}
	
	/**
	 * Index: with default state.
	 *		.text : RegularExpression(Index|More\.\.\.|Export|Extract|Report|Join|Sort|Verify)
	 * 		.class : #32770
	 * 		.name : RegularExpression(Index|More\.\.\.|Export|Extract|Report|Join|Sort|Verify)
	 * 		.classIndex : RegularExpression(1|0|2)
	 */
	protected GuiSubitemTestObject mainWin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin"));
	}
	/**
	 * Index: with specific test context and state.
	 *		.text : RegularExpression(Index|More\.\.\.|Export|Extract|Report|Join|Sort|Verify)
	 * 		.class : #32770
	 * 		.name : RegularExpression(Index|More\.\.\.|Export|Extract|Report|Join|Sort|Verify)
	 * 		.classIndex : RegularExpression(1|0|2)
	 */
	protected GuiSubitemTestObject mainWin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("mainWin"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject main_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("main_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject main_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("main_cancel"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject main_columnseparator() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_columnseparator"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextSelectGuiSubitemTestObject main_columnseparator(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_columnseparator"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Export As
	 * 		.class : ComboBox
	 * 		.name : Export As
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject main_exportas() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_exportas"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Export As
	 * 		.class : ComboBox
	 * 		.name : Export As
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject main_exportas(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_exportas"), anchor, flags);
	}
	
	/**
	 * Fields: with default state.
	 *		.text : Fields
	 * 		.class : .Radiobutton
	 * 		.name : Fields
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_fields() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_fields"));
	}
	/**
	 * Fields: with specific test context and state.
	 *		.text : Fields
	 * 		.class : .Radiobutton
	 * 		.name : Fields
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_fields(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_fields"), anchor, flags);
	}
	
	/**
	 * SysListView32: with default state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject main_fieldstable() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("main_fieldstable"));
	}
	/**
	 * SysListView32: with specific test context and state.
	 *		.text : null
	 * 		.class : SysListView32
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject main_fieldstable(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("main_fieldstable"), anchor, flags);
	}
	
	/**
	 * FitToPage: with default state.
	 *		.text : Fit to page
	 * 		.class : .Checkbutton
	 * 		.name : Fit to page
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_fittopage() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_fittopage"));
	}
	/**
	 * FitToPage: with specific test context and state.
	 *		.text : Fit to page
	 * 		.class : .Checkbutton
	 * 		.name : Fit to page
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_fittopage(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_fittopage"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Footer
	 * 		.class : Edit
	 * 		.name : Footer
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject main_footer() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_footer"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Footer
	 * 		.class : Edit
	 * 		.name : Footer
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject main_footer(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_footer"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : Header
	 * 		.class : Edit
	 * 		.name : Header
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject main_header() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_header"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : Header
	 * 		.class : Edit
	 * 		.name : Header
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject main_header(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_header"), anchor, flags);
	}
	
	/**
	 * _If: with default state.
	 *		.text : If...
	 * 		.class : Button
	 * 		.name : If...
	 * 		.classIndex : RegularExpression(0|8)
	 */
	protected GuiSubitemTestObject main_if() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("main_if"));
	}
	/**
	 * _If: with specific test context and state.
	 *		.text : If...
	 * 		.class : Button
	 * 		.name : If...
	 * 		.classIndex : RegularExpression(0|8)
	 */
	protected GuiSubitemTestObject main_if(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("main_if"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject main_iftext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_iftext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject main_iftext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_iftext"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_local"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject main_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("main_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject main_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("main_ok"), anchor, flags);
	}
	
	/**
	 * IndexOn: with default state.
	 *		.class : Button
	 * 		.name : RegularExpression(Index On\.\.\.|Export Fields\.\.\.|Extract Fields\.\.\.|Sort O ...
	 */
	protected GuiSubitemTestObject main_onfields() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("main_onfields"));
	}
	/**
	 * IndexOn: with specific test context and state.
	 *		.class : Button
	 * 		.name : RegularExpression(Index On\.\.\.|Export Fields\.\.\.|Extract Fields\.\.\.|Sort O ...
	 */
	protected GuiSubitemTestObject main_onfields(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("main_onfields"), anchor, flags);
	}
	
	/**
	 * Presort: with default state.
	 *		.text : Presort
	 * 		.class : .Checkbutton
	 * 		.name : Presort
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_presort() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_presort"));
	}
	/**
	 * Presort: with specific test context and state.
	 *		.text : Presort
	 * 		.class : .Checkbutton
	 * 		.name : Presort
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_presort(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_presort"), anchor, flags);
	}
	
	/**
	 * Record: with default state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_record() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_record"));
	}
	/**
	 * Record: with specific test context and state.
	 *		.text : Record
	 * 		.class : .Radiobutton
	 * 		.name : Record
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_record(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_record"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject main_spacing() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_spacing"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject main_spacing(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_spacing"), anchor, flags);
	}
	
	/**
	 * Summarize: with default state.
	 *		.text : Summarize
	 * 		.class : .Checkbutton
	 * 		.name : Summarize
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_summarize() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_summarize"));
	}
	/**
	 * Summarize: with specific test context and state.
	 *		.text : Summarize
	 * 		.class : .Checkbutton
	 * 		.name : Summarize
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_summarize(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_summarize"), anchor, flags);
	}
	
	/**
	 * SuppressBlankDetailLines: with default state.
	 *		.text : Suppress blank detail lines
	 * 		.class : .Checkbutton
	 * 		.name : Suppress blank detail lines
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_suppressblank() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_suppressblank"));
	}
	/**
	 * SuppressBlankDetailLines: with specific test context and state.
	 *		.text : Suppress blank detail lines
	 * 		.class : .Checkbutton
	 * 		.name : Suppress blank detail lines
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_suppressblank(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_suppressblank"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : Text Qualifier
	 * 		.class : ComboBox
	 * 		.name : Text Qualifier
	 * 		.classIndex : 2
	 */
	protected TextSelectGuiSubitemTestObject main_textqualifier() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_textqualifier"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : Text Qualifier
	 * 		.class : ComboBox
	 * 		.name : Text Qualifier
	 * 		.classIndex : 2
	 */
	protected TextSelectGuiSubitemTestObject main_textqualifier(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("main_textqualifier"), anchor, flags);
	}
	
	/**
	 * _To: with default state.
	 *		.text : To...
	 * 		.class : Button
	 * 		.name : To...
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject main_to() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("main_to"));
	}
	/**
	 * _To: with specific test context and state.
	 *		.text : To...
	 * 		.class : Button
	 * 		.name : To...
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject main_to(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("main_to"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject main_totext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_totext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject main_totext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("main_totext"), anchor, flags);
	}
	
	/**
	 * Unicode: with default state.
	 *		.text : Unicode
	 * 		.class : .Checkbutton
	 * 		.name : Unicode
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_unicode() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_unicode"));
	}
	/**
	 * Unicode: with specific test context and state.
	 *		.text : Unicode
	 * 		.class : .Checkbutton
	 * 		.name : Unicode
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_unicode(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_unicode"), anchor, flags);
	}
	
	/**
	 * UseOutputTable: with default state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_useOutputTable() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_useOutputTable"));
	}
	/**
	 * UseOutputTable: with specific test context and state.
	 *		.text : Use Output Table
	 * 		.class : .Checkbutton
	 * 		.name : Use Output Table
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_useOutputTable(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_useOutputTable"), anchor, flags);
	}
	
	/**
	 * View: with default state.
	 *		.text : View
	 * 		.class : .Radiobutton
	 * 		.name : View
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_view() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_view"));
	}
	/**
	 * View: with specific test context and state.
	 *		.text : View
	 * 		.class : .Radiobutton
	 * 		.name : View
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_view(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_view"), anchor, flags);
	}
	
	/**
	 * ExportWithFieldNames: with default state.
	 *		.text : Export with field names
	 * 		.class : .Checkbutton
	 * 		.name : Export with field names
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_withFieldNames() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_withFieldNames"));
	}
	/**
	 * ExportWithFieldNames: with specific test context and state.
	 *		.text : Export with field names
	 * 		.class : .Checkbutton
	 * 		.name : Export with field names
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject main_withFieldNames(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("main_withFieldNames"), anchor, flags);
	}
	
	/**
	 * All: with default state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_all() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_all"));
	}
	/**
	 * All: with specific test context and state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_all(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_all"), anchor, flags);
	}
	
	/**
	 * AppendToExistingFile: with default state.
	 *		.text : Append To Existing File
	 * 		.class : .Checkbutton
	 * 		.name : Append To Existing File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_append() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_append"));
	}
	/**
	 * AppendToExistingFile: with specific test context and state.
	 *		.text : Append To Existing File
	 * 		.class : .Checkbutton
	 * 		.name : Append To Existing File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_append(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_append"), anchor, flags);
	}
	
	/**
	 * First: with default state.
	 *		.text : First
	 * 		.class : .Radiobutton
	 * 		.name : First
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_first() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_first"));
	}
	/**
	 * First: with specific test context and state.
	 *		.text : First
	 * 		.class : .Radiobutton
	 * 		.name : First
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_first(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_first"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject moreJoin_firsttext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("moreJoin_firsttext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject moreJoin_firsttext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("moreJoin_firsttext"), anchor, flags);
	}
	
	/**
	 * IncludeAllPrimaryRecords: with default state.
	 *		.text : Include All Primary Records
	 * 		.class : .Checkbutton
	 * 		.name : Include All Primary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_includeAllPrimary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_includeAllPrimary"));
	}
	/**
	 * IncludeAllPrimaryRecords: with specific test context and state.
	 *		.text : Include All Primary Records
	 * 		.class : .Checkbutton
	 * 		.name : Include All Primary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_includeAllPrimary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_includeAllPrimary"), anchor, flags);
	}
	
	/**
	 * IncludeAllSecondaryRecords: with default state.
	 *		.text : Include All Secondary Records
	 * 		.class : .Checkbutton
	 * 		.name : Include All Secondary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_includeAllSecondary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_includeAllSecondary"));
	}
	/**
	 * IncludeAllSecondaryRecords: with specific test context and state.
	 *		.text : Include All Secondary Records
	 * 		.class : .Checkbutton
	 * 		.name : Include All Secondary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_includeAllSecondary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_includeAllSecondary"), anchor, flags);
	}
	
	/**
	 * ManyToManyMatchedRecords: with default state.
	 *		.text : Many-to-Many Matched Records
	 * 		.class : .Radiobutton
	 * 		.name : Many-to-Many Matched Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_manyToMany() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_manyToMany"));
	}
	/**
	 * ManyToManyMatchedRecords: with specific test context and state.
	 *		.text : Many-to-Many Matched Records
	 * 		.class : .Radiobutton
	 * 		.name : Many-to-Many Matched Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_manyToMany(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_manyToMany"), anchor, flags);
	}
	
	/**
	 * MatchedPrimaryRecords: with default state.
	 *		.text : Matched Primary Records
	 * 		.class : .Radiobutton
	 * 		.name : Matched Primary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_matchedPrimary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_matchedPrimary"));
	}
	/**
	 * MatchedPrimaryRecords: with specific test context and state.
	 *		.text : Matched Primary Records
	 * 		.class : .Radiobutton
	 * 		.name : Matched Primary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_matchedPrimary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_matchedPrimary"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.text : Next
	 * 		.class : .Radiobutton
	 * 		.name : Next
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_next() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.text : Next
	 * 		.class : .Radiobutton
	 * 		.name : Next
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_next(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_next"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject moreJoin_nexttext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("moreJoin_nexttext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject moreJoin_nexttext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("moreJoin_nexttext"), anchor, flags);
	}
	
	/**
	 * UnmatchedPrimaryRecords: with default state.
	 *		.text : Unmatched Primary Records
	 * 		.class : .Radiobutton
	 * 		.name : Unmatched Primary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_unmatchedPrimary() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_unmatchedPrimary"));
	}
	/**
	 * UnmatchedPrimaryRecords: with specific test context and state.
	 *		.text : Unmatched Primary Records
	 * 		.class : .Radiobutton
	 * 		.name : Unmatched Primary Records
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject moreJoin_unmatchedPrimary(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("moreJoin_unmatchedPrimary"), anchor, flags);
	}
	
	/**
	 * While: with default state.
	 *		.text : While...
	 * 		.class : .Pushbutton
	 * 		.name : While...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject moreJoin_while() 
	{
		return new GuiTestObject(
                        getMappedTestObject("moreJoin_while"));
	}
	/**
	 * While: with specific test context and state.
	 *		.text : While...
	 * 		.class : .Pushbutton
	 * 		.name : While...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject moreJoin_while(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("moreJoin_while"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject moreJoin_whiletext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("moreJoin_whiletext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject moreJoin_whiletext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("moreJoin_whiletext"), anchor, flags);
	}
	
	/**
	 * All: with default state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_all() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_all"));
	}
	/**
	 * All: with specific test context and state.
	 *		.text : All
	 * 		.class : .Radiobutton
	 * 		.name : All
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_all(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_all"), anchor, flags);
	}
	
	/**
	 * AppendToExistingFile: with default state.
	 *		.text : Append To Existing File
	 * 		.class : .Checkbutton
	 * 		.name : Append To Existing File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_append() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_append"));
	}
	/**
	 * AppendToExistingFile: with specific test context and state.
	 *		.text : Append To Existing File
	 * 		.class : .Checkbutton
	 * 		.name : Append To Existing File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_append(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_append"), anchor, flags);
	}
	
	/**
	 * EOFEndOfFileProcessing: with default state.
	 *		.text : EOF (End of file processing)
	 * 		.class : .Checkbutton
	 * 		.name : EOF (End of file processing)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_eof() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_eof"));
	}
	/**
	 * EOFEndOfFileProcessing: with specific test context and state.
	 *		.text : EOF (End of file processing)
	 * 		.class : .Checkbutton
	 * 		.name : EOF (End of file processing)
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_eof(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_eof"), anchor, flags);
	}
	
	/**
	 * _10: with default state.
	 *		.text : Error Limit
	 * 		.class : Edit
	 * 		.name : Error Limit
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject more_errorLimitText() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_errorLimitText"));
	}
	/**
	 * _10: with specific test context and state.
	 *		.text : Error Limit
	 * 		.class : Edit
	 * 		.name : Error Limit
	 * 		.classIndex : 3
	 */
	protected TextGuiTestObject more_errorLimitText(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_errorLimitText"), anchor, flags);
	}
	
	/**
	 * First: with default state.
	 *		.text : First
	 * 		.class : .Radiobutton
	 * 		.name : First
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_first() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_first"));
	}
	/**
	 * First: with specific test context and state.
	 *		.text : First
	 * 		.class : .Radiobutton
	 * 		.name : First
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_first(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_first"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject more_firsttext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_firsttext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject more_firsttext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_firsttext"), anchor, flags);
	}
	
	/**
	 * Next: with default state.
	 *		.text : Next
	 * 		.class : .Radiobutton
	 * 		.name : Next
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_next() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_next"));
	}
	/**
	 * Next: with specific test context and state.
	 *		.text : Next
	 * 		.class : .Radiobutton
	 * 		.name : Next
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject more_next(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("more_next"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject more_nexttext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_nexttext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject more_nexttext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_nexttext"), anchor, flags);
	}
	
	/**
	 * While: with default state.
	 *		.text : While...
	 * 		.class : .Pushbutton
	 * 		.name : While...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject more_while() 
	{
		return new GuiTestObject(
                        getMappedTestObject("more_while"));
	}
	/**
	 * While: with specific test context and state.
	 *		.text : While...
	 * 		.class : .Pushbutton
	 * 		.name : While...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject more_while(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("more_while"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject more_whiletext() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_whiletext"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject more_whiletext(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("more_whiletext"), anchor, flags);
	}
	
	/**
	 * Cancel: with default state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject nameRelation_cancel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("nameRelation_cancel"));
	}
	/**
	 * Cancel: with specific test context and state.
	 *		.text : Cancel
	 * 		.class : .Pushbutton
	 * 		.name : Cancel
	 * 		.classIndex : 0
	 */
	protected GuiTestObject nameRelation_cancel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("nameRelation_cancel"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject nameRelation_ok() 
	{
		return new GuiTestObject(
                        getMappedTestObject("nameRelation_ok"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject nameRelation_ok(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("nameRelation_ok"), anchor, flags);
	}
	
	/**
	 * Payroll2: with default state.
	 *		.class : Edit
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject nameRelation_text() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("nameRelation_text"));
	}
	/**
	 * Payroll2: with specific test context and state.
	 *		.class : Edit
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject nameRelation_text(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("nameRelation_text"), anchor, flags);
	}
	
	/**
	 * NameRelation: with default state.
	 *		.text : Name Relation
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Name Relation
	 */
	protected TopLevelSubitemTestObject nameRelationwin() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("nameRelationwin"));
	}
	/**
	 * NameRelation: with specific test context and state.
	 *		.text : Name Relation
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Name Relation
	 */
	protected TopLevelSubitemTestObject nameRelationwin(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("nameRelationwin"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : Button
	 * 		.name : OK
	 */
	protected GuiSubitemTestObject okwindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("okwindow"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : Button
	 * 		.name : OK
	 */
	protected GuiSubitemTestObject okwindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("okwindow"), anchor, flags);
	}
	
	/**
	 * File: with default state.
	 *		.text : File
	 * 		.class : .Radiobutton
	 * 		.name : File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_file() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_file"));
	}
	/**
	 * File: with specific test context and state.
	 *		.text : File
	 * 		.class : .Radiobutton
	 * 		.name : File
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_file(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_file"), anchor, flags);
	}
	
	/**
	 * ComboBox: with default state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject output_filetype() 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("output_filetype"));
	}
	/**
	 * ComboBox: with specific test context and state.
	 *		.text : null
	 * 		.class : ComboBox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextSelectGuiSubitemTestObject output_filetype(TestObject anchor, long flags) 
	{
		return new TextSelectGuiSubitemTestObject(
                        getMappedTestObject("output_filetype"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject output_footer() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_footer"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 2
	 */
	protected TextGuiTestObject output_footer(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_footer"), anchor, flags);
	}
	
	/**
	 * Graph: with default state.
	 *		.text : Graph
	 * 		.class : .Radiobutton
	 * 		.name : Graph
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_graph() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_graph"));
	}
	/**
	 * Graph: with specific test context and state.
	 *		.text : Graph
	 * 		.class : .Radiobutton
	 * 		.name : Graph
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_graph(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_graph"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject output_header() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_header"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject output_header(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_header"), anchor, flags);
	}
	
	/**
	 * Local: with default state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_local() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_local"));
	}
	/**
	 * Local: with specific test context and state.
	 *		.text : Local
	 * 		.class : .Checkbutton
	 * 		.name : Local
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_local(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_local"), anchor, flags);
	}
	
	/**
	 * Edit: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject output_name() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_name"));
	}
	/**
	 * Edit: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject output_name(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("output_name"), anchor, flags);
	}
	
	/**
	 * Print: with default state.
	 *		.text : Print
	 * 		.class : .Radiobutton
	 * 		.name : Print
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_print() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_print"));
	}
	/**
	 * Print: with specific test context and state.
	 *		.text : Print
	 * 		.class : .Radiobutton
	 * 		.name : Print
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_print(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_print"), anchor, flags);
	}
	
	/**
	 * Screen: with default state.
	 *		.text : Screen
	 * 		.class : .Radiobutton
	 * 		.name : Screen
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_screen() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_screen"));
	}
	/**
	 * Screen: with specific test context and state.
	 *		.text : Screen
	 * 		.class : .Radiobutton
	 * 		.name : Screen
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject output_screen(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("output_screen"), anchor, flags);
	}
	
	/**
	 * AddTable: with default state.
	 *		.text : Add Table...
	 * 		.class : .Pushbutton
	 * 		.name : Add Table...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relation_addTable() 
	{
		return new GuiTestObject(
                        getMappedTestObject("relation_addTable"));
	}
	/**
	 * AddTable: with specific test context and state.
	 *		.text : Add Table...
	 * 		.class : .Pushbutton
	 * 		.name : Add Table...
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relation_addTable(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("relation_addTable"), anchor, flags);
	}
	
	/**
	 * Finish: with default state.
	 *		.text : Finish
	 * 		.class : .Pushbutton
	 * 		.name : Finish
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relation_finish() 
	{
		return new GuiTestObject(
                        getMappedTestObject("relation_finish"));
	}
	/**
	 * Finish: with specific test context and state.
	 *		.text : Finish
	 * 		.class : .Pushbutton
	 * 		.name : Finish
	 * 		.classIndex : 0
	 */
	protected GuiTestObject relation_finish(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("relation_finish"), anchor, flags);
	}
	
	/**
	 * VR_CTL: with default state.
	 *		.text : null
	 * 		.class : VR_CTL
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject relations_innerwin() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("relations_innerwin"));
	}
	/**
	 * VR_CTL: with specific test context and state.
	 *		.text : null
	 * 		.class : VR_CTL
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject relations_innerwin(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("relations_innerwin"), anchor, flags);
	}
	
	/**
	 * Relations: with default state.
	 *		.text : Relations
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Relations
	 */
	protected TopLevelSubitemTestObject relationswin() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("relationswin"));
	}
	/**
	 * Relations: with specific test context and state.
	 *		.text : Relations
	 * 		.class : #32770
	 * 		.processName : ACLWin.exe
	 * 		.name : Relations
	 */
	protected TopLevelSubitemTestObject relationswin(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("relationswin"), anchor, flags);
	}
	
	/**
	 * AddAll: with default state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject seFields_addall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("seFields_addall"));
	}
	/**
	 * AddAll: with specific test context and state.
	 *		.text : Add All
	 * 		.class : .Pushbutton
	 * 		.name : Add All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject seFields_addall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("seFields_addall"), anchor, flags);
	}
	
	/**
	 * ClearAll: with default state.
	 *		.text : Clear All
	 * 		.class : .Pushbutton
	 * 		.name : Clear All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject seFields_clearall() 
	{
		return new GuiTestObject(
                        getMappedTestObject("seFields_clearall"));
	}
	/**
	 * ClearAll: with specific test context and state.
	 *		.text : Clear All
	 * 		.class : .Pushbutton
	 * 		.name : Clear All
	 * 		.classIndex : 0
	 */
	protected GuiTestObject seFields_clearall(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("seFields_clearall"), anchor, flags);
	}
	
	

	protected aclDataDialogsHelper()
	{
		setScriptName("ACL_Desktop.AppObject.aclDataDialogs");
	}
	
}

