# Properties file with JDBC and JPA settings.
#
# Applied by <context:property-placeholder location="jdbc.properties"/> from
# various application context XML files (e.g., "applicationContext-*.xml").
# Targeted at system administrators, to avoid touching the context XML files.

#-------------------------------------------------------------------------------
# JPA Settings
#-------------------------------------------------------------------------------
jdbc.jpa.vendor=org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter
jdbc.jpa.databasePlatform=org.apache.openjpa.jdbc.sql.OracleDictionary
jdbc.jpa.loadtimeweaver=org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver
jdbc.jpa.generateDdl=false
jdbc.jpa.showSql=true

#-------------------------------------------------------------------------------
# OpenJPA Specific Settings
#-------------------------------------------------------------------------------
openjpa.DataCache=false
openjpa.Log=log4j
openjpa.RemoteCommitProvider=sjvm
openjpa.ConnectionFactoryProperties=PrettyPrint=true, PrettyPrintLineLength=150

# currently caching of users, roles and user-role-entity relations does not work.
# the whole authorization implementation in the exception management has to
# be examined and decoupled references have to be deleted. instead user-role-entity
# relations have to be retrieved every time from the central repository via the dao 
# in order to detect changes. if this works caching can be activated to reduce the 
# performance impact. frequent cache eviction makes sure that the cache is up-to-date.
#
# example configuration:
# caching of 1000 objects without soft references and cache eviction every 15 minutes
#openjpa.DataCache=true(CacheSize=5000, SoftReferenceSize=0, EvictionSchedule='00,15,30,45 * * * *')